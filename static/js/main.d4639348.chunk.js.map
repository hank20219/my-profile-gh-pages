{"version":3,"sources":["icons/logo.svg","icons/home.svg","icons/about.svg","icons/contact.svg","components/Home/index.js","components/About/index.js","components/Contacts/index.js","components/Repos/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","About","Contact","App","state","selected","extended","onSelect","setState","onToggle","expanded","this","render","location","history","Fragment","style","marginLeft","padding","backgroundColor","class","href","src","logo","width","float","path","exact","component","to","pathname","push","Toggle","Nav","defaultSelected","eventKey","homeIcon","position","height","opacity","className","fontSize","aboutIcon","contactIcon","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,yOCY5BC,E,iLARX,OACI,6BACE,yC,GAJSC,aCYJC,E,iLARX,OACI,6BACE,0C,GAJUD,aCULE,E,iLARX,OACI,6BACE,4C,GAJYF,a,GCFHA,Y,mFC8HAG,G,6NAhHbC,MAAQ,CACNC,SAAU,OACVC,UAAW,G,EAEbC,SAAW,SAACF,GACV,EAAKG,SAAS,CAAEH,SAAUA,K,EAE5BI,SAAW,SAACC,GACV,EAAKF,SAAS,CAAEE,SAAUA,K,wEAElB,IAAD,SACwBC,KAAKP,MAA5BM,EADD,EACCA,SADD,EACWL,SAClB,OACA,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAOO,OAAQ,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,QAAb,OACX,kBAAC,IAAMC,SAAP,KACI,yBACIC,MAAO,CACHC,WAAYP,EAAW,IAAM,GAC7BQ,QAAS,iBACTC,gBAAiB,YAGrB,yBAAKC,MAAM,+CACP,uBAAGA,MAAM,eAAgBC,KAAK,KAC1B,yBAAKC,IAAOC,IAAMC,MAAQ,QAAQR,MAAO,CAACS,MAAM,UAChD,wBAAIT,MAAQ,CAACE,QAAQ,eAArB,yBAMZ,yBACIF,MAAO,CACHC,WAAYP,EAAW,IAAM,GAC7BQ,QAAS,oBAGb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOQ,KAAK,IAAIC,OAAK,EAACC,UAAW7B,IACjC,kBAAC,IAAD,CAAO2B,KAAK,SAASE,UAAW3B,IAChC,kBAAC,IAAD,CAAOyB,KAAK,WAAWE,UAAW1B,MAG9C,kBAAC,IAAD,CACQK,SAAU,SAACF,GACP,IAAMwB,EAAK,IAAMxB,EACbQ,EAASiB,WAAaD,GAAmB,SAAbxB,EAC5BS,EAAQiB,KAAKF,GACM,SAAbxB,GACNS,EAAQiB,KAAK,MAGrBtB,SAAY,EAAKA,UAEjB,kBAAC,IAAQuB,OAAT,MACA,kBAAC,IAAQC,IAAT,CAAaC,gBAAgB,QACzB,kBAAC,UAAD,CAASC,SAAS,QACd,kBAAC,UAAD,KACI,yBAAKb,IAAOc,IACPpB,MAAS,CAACqB,SAAU,UACVnB,QAAS,aACTM,MAAO,MACPc,OAAQ,MACRC,QAAS,SAExB,uBAAGC,UAAU,mBAAmBxB,MAAO,CAAEyB,SAAU,aAEvD,kBAAC,UAAD,cAIJ,kBAAC,UAAD,CAASN,SAAS,SACd,kBAAC,UAAD,KACI,yBAAKb,IAAOoB,IACP1B,MAAS,CAACqB,SAAU,UACVnB,QAAS,aACTM,MAAO,MACPc,OAAQ,MACRC,QAAS,SAExB,uBAAGC,UAAU,qBAAqBxB,MAAO,CAAEyB,SAAU,aAEzD,kBAAC,UAAD,eAIJ,kBAAC,UAAD,CAASN,SAAS,WACd,kBAAC,UAAD,KACA,yBAAKb,IAAOqB,IACH3B,MAAS,CAACqB,SAAU,UACVnB,QAAS,aACTM,MAAO,MACPc,OAAQ,MACRC,QAAS,SAExB,uBAAGC,UAAU,qBAAqBxB,MAAO,CAAEyB,SAAU,aAEzD,kBAAC,UAAD,4B,GAnGNzC,c,MCHF4C,QACW,cAA7BC,OAAOhC,SAASiC,UAEe,UAA7BD,OAAOhC,SAASiC,UAEhBD,OAAOhC,SAASiC,SAASC,MACvB,2DCPNC,IAASpC,OACN,kBAAC,EAAD,MACDqC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d4639348.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.a0efd293.svg\";","module.exports = __webpack_public_path__ + \"static/media/about.480ed7c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/contact.14026fad.svg\";","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>Home</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","// About.js\n\nimport React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n    return (\n        <div>\n          <h2>About</h2>\n        </div>\n    );\n  }\n}\n\nexport default About;","// Contact.js\r\n\r\nimport React, { Component } from 'react';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>Contact</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n        <div>\r\n          <h2>Repos</h2>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","    import React, { Component } from 'react';\n    import { BrowserRouter as Router, Switch, Route, Link, History, Location } from 'react-router-dom';\n    import Home from '../../components/Home';\n    import About from '../../components/About';\n    import Contact from '../../components/Contacts';\n    import Repos from '../../components/Repos';\n    import logo from '../../icons/logo.svg';\n    import homeIcon from '../../icons/home.svg';\n    import aboutIcon from '../../icons/about.svg';\n    import contactIcon from '../../icons/contact.svg';\n    import SideNav, { Toggle, Nav, NavItem, NavIcon, NavText } from '@trendmicro/react-sidenav';\n    import 'bootstrap/dist/css/bootstrap.min.css';\n    import '@trendmicro/react-sidenav/dist/react-sidenav.css';\n    import \"./App.css\";\n\n    class App extends Component {\n      state = {\n        selected: 'home',\n        extended : false  \n      };\n      onSelect = (selected) => {\n        this.setState({ selected: selected });\n      };\n      onToggle = (expanded) => {\n        this.setState({ expanded: expanded });\n      };\n      render() {\n        const { expanded, selected } = this.state;\n        return (\n        <Router>\n        <Route render={({ location, history }) => (\n            <React.Fragment>                                \n                <div\n                    style={{\n                        marginLeft: expanded ? 230 : 54,\n                        padding: '5px 20px 0 0px',\n                        backgroundColor: '#343A40'\n                    }}\n                >\n                    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">                        \n                        <a class=\"navbar-brand\"  href=\"/\">\n                            <img src = {logo} width = \"117px\" style={{float:'left'}} />\n                            <h1 style= {{padding:'17px 0 0 0'}}>Welcome to my page</h1>\n                        </a>                        \n                    </nav>  \n                    \n                </div>\n            \n                <div\n                    style={{\n                        marginLeft: expanded ? 240 : 64,\n                        padding: '5px 20px 0 20px'\n                    }}\n                >\n                    <Switch>\n                        <Route path=\"/\" exact component={Home} />                \n                        <Route path=\"/about\" component={About} />\n                        <Route path=\"/contact\" component={Contact} />\n                    </Switch>\n                </div>\n            <SideNav\n                    onSelect={(selected) => {                        \n                        const to = '/' + selected;\n                        if (location.pathname !== to && selected !== \"home\") {\n                            history.push(to);\n                        }else if (selected === \"home\"){\n                            history.push('/');\n                        }\n                    }} \n                    onToggle = {this.onToggle}\n                >\n                    <SideNav.Toggle />\n                    <SideNav.Nav defaultSelected=\"home\">\n                        <NavItem eventKey=\"home\">\n                            <NavIcon>\n                                <img src = {homeIcon} \n                                     style = {{position: 'inherit',\n                                               padding: '0 0 10px 0',\n                                               width: '75%',\n                                               height: '75%',\n                                               opacity: '0.8',\n                                             }} />\n                                <i className=\"fa fa-fw fa-home\" style={{ fontSize: '1.75em' }} />\n                            </NavIcon>\n                            <NavText>\n                                Home\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"about\">\n                            <NavIcon>\n                                <img src = {aboutIcon} \n                                     style = {{position: 'inherit',\n                                               padding: '0 0 10px 0',\n                                               width: '75%',\n                                               height: '75%',\n                                               opacity: '0.8',\n                                             }} />\n                                <i className=\"fa fa-fw fa-report\" style={{ fontSize: '1.75em' }} />\n                            </NavIcon>\n                            <NavText>\n                                About\n                            </NavText>\n                        </NavItem>\n                        <NavItem eventKey=\"contact\">                            \n                            <NavIcon>\n                            <img src = {contactIcon} \n                                     style = {{position: 'inherit',\n                                               padding: '0 0 10px 0',\n                                               width: '75%',\n                                               height: '75%',\n                                               opacity: '0.8',\n                                             }} />\n                                <i className=\"fa fa-fw fa-device\" style={{ fontSize: '1.75em' }} />\n                            </NavIcon>\n                            <NavText>\n                                Contact\n                            </NavText>\n                        </NavItem>\n                    </SideNav.Nav>\n                </SideNav>\n            </React.Fragment>\n        )}\n        />\n        </Router>\n        );\n      }\n    }\n\n    export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport About from './components/About';\nimport Home from './components/Home';\nimport Repos from './components/Repos';\nimport User from './components/User';\nimport Contacts from './components/Contacts';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n   <App />,\n  document.getElementById('root'));\n\n//ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}